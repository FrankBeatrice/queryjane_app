# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-05-28 19:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('entrepreneur', '0001_initial'),
        ('place', '0001_initial'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='usernotification',
            name='job_offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.JobOffer', verbose_name='related job offer'),
        ),
        migrations.AddField(
            model_name='usernotification',
            name='membership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.AdministratorMembership', verbose_name='membership invitation'),
        ),
        migrations.AddField(
            model_name='usernotification',
            name='noty_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Notify to'),
        ),
        migrations.AddField(
            model_name='usernotification',
            name='venture_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.Venture', verbose_name='from venture'),
        ),
        migrations.AddField(
            model_name='usernotification',
            name='venture_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='venture_to', to='entrepreneur.Venture', verbose_name='venture to'),
        ),
        migrations.AddField(
            model_name='usermessage',
            name='company_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_from', to='entrepreneur.Venture', verbose_name='from'),
        ),
        migrations.AddField(
            model_name='usermessage',
            name='company_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_to', to='entrepreneur.Venture', verbose_name='to'),
        ),
        migrations.AddField(
            model_name='usermessage',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Conversation'),
        ),
        migrations.AddField(
            model_name='usermessage',
            name='user_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_from', to=settings.AUTH_USER_MODEL, verbose_name='from'),
        ),
        migrations.AddField(
            model_name='usermessage',
            name='user_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_to', to=settings.AUTH_USER_MODEL, verbose_name='to'),
        ),
        migrations.AddField(
            model_name='usercontact',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_book_owner', to='account.ProfessionalProfile', verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='usercontact',
            name='user_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.ProfessionalProfile', verbose_name='contact'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='industry_categories',
            field=models.ManyToManyField(blank=True, to='account.IndustryCategory'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='participating_company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.Venture'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='participating_users',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='companycontact',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.Venture'),
        ),
        migrations.AddField(
            model_name='companycontact',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.ProfessionalProfile', verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.City', verbose_name='city'),
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.Country', verbose_name='country'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.State', verbose_name='state'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
