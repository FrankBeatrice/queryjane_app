# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-05-28 19:22
from __future__ import unicode_literals

import app.validators
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        ('place', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministratorMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(10, 'Pending membership'), (20, 'Active membership'), (30, 'Inactive membership'), (40, 'Rejected membership')], default=10)),
                ('role', models.PositiveSmallIntegerField(choices=[(10, 'Owner'), (20, 'Administrator')], default=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.ProfessionalProfile', verbose_name='Administrator')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_owner', to='account.ProfessionalProfile', verbose_name='Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.ProfessionalProfile', verbose_name='applicant')),
            ],
            options={
                'verbose_name': 'applicant',
                'verbose_name_plural': 'applicants',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CompanyScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'company score',
                'verbose_name_plural': 'company scores',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(100, 'Active'), (120, 'Closed'), (130, 'Hidden')], default=100, verbose_name='status')),
                ('job_type', models.PositiveSmallIntegerField(choices=[(100, 'Freelance'), (110, 'Full time'), (120, 'Internship'), (130, 'Part time'), (140, 'Temporary'), (150, 'Volunteer')], default=100, verbose_name='job type')),
                ('title', models.CharField(max_length=80, verbose_name='title (position)')),
                ('slug', models.SlugField()),
                ('description', models.TextField(verbose_name='description')),
                ('shared_on_twitter', models.BooleanField(default=False, verbose_name='shared on twitter')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('applicants_record', models.PositiveSmallIntegerField(default=0, verbose_name='applicants register')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.City', verbose_name='city')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.Country', verbose_name='country')),
                ('industry_categories', models.ManyToManyField(to='account.IndustryCategory')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.State', verbose_name='state')),
            ],
            options={
                'verbose_name': 'job offer',
                'verbose_name_plural': 'job offers',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Venture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(100, 'Active'), (120, 'Inactive'), (130, 'Hidden')], default=100, verbose_name='status')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('logo', models.ImageField(blank=True, help_text='150x150', max_length=255, upload_to='', validators=[app.validators.FileSizeValidator(4000)])),
                ('description_es', models.TextField(blank=True, null=True, verbose_name='spanish description')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='english description')),
                ('address', models.CharField(blank=True, max_length=50, verbose_name='address')),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='location')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='contact email')),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='contact phone')),
                ('url', models.URLField(blank=True, verbose_name='webpage')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook url')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter url')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram url')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='Linkedin url')),
                ('googleplus_url', models.URLField(blank=True, verbose_name='Google plus url')),
                ('shared_on_twitter', models.BooleanField(default=False, verbose_name='shared on twitter')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField()),
                ('has_new_messages', models.BooleanField(default=False, verbose_name='has new messages')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.City', verbose_name='city')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.Country', verbose_name='country')),
                ('industry_categories', models.ManyToManyField(to='account.IndustryCategory')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.ProfessionalProfile', verbose_name='created by')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='place.State', verbose_name='state')),
            ],
        ),
        migrations.AddField(
            model_name='joboffer',
            name='venture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.Venture', verbose_name='company'),
        ),
        migrations.AddField(
            model_name='companyscore',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.Venture', verbose_name='company'),
        ),
        migrations.AddField(
            model_name='companyscore',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuario'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='job_offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.JobOffer', verbose_name='job offer'),
        ),
        migrations.AddField(
            model_name='administratormembership',
            name='venture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entrepreneur.Venture', verbose_name='company'),
        ),
    ]
